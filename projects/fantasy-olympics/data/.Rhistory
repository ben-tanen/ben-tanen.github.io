subset <- past_medal_grp2[,c("Country", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
write.csv(full_results, paste0(path, "/fantasy-olympics-predictions.csv"))
full_resultspast_medals[order(-total)]
full_results[order(-total)]
full_results <- full_results[order(-total)]
write.csv(full_results, paste0(path, "/fantasy-olympics-predictions.csv"))
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[order(-total)]
full_results
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[order(-total)]
write.csv(full_results, paste0(path, "/fantasy-olympics-predictions.csv"))
past_medals[Country == "DEN",]
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# transform data
past_medal_grp <- past_medals[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[order(-total)]
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
# transform data
past_medal_grp <- past_medals[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[order(-total)]
write.csv(full_results, paste0(path, "/predictions.csv"))
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# transform data
past_medal_grp <- past_medals[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
View(past_medal_grp2)
# filter out countries not present past 1984
past_medals[, max(Year), by=list(Country)]
# filter out countries not present past 1984
past_medals[, max(Year), by=list(Country)][V1 < 1984, "Country"]
# filter out countries not present past 1984
past_medals[, max(Year), by=list(Country)][V1 < 1992, "Country"]
# filter out countries not present past 1984
past_medals[, max(Year), by=list(Country)][V1 < 1998, "Country"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998, "Country"]
"USA" %in% drop_countries
"EUA" %in% drop_countries
"EUA" in drop_countries
"EUA" %in% drop_countries
c(drop_countries)
# filter out countries not present past 1984
drop_countries <- c(past_medals[, max(Year), by=list(Country)][V1 < 1998, "Country"])
"USA" %in% drop_countries
"EUA" %in% drop_countries
"ESP" %in% drop_countries
drop_countries
drop_countries[1]
drop_countries$Country[1]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
drop_countries
past_medals[Country %in% drop_countries, ]
past_medals[!Country %in% drop_countries, ]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
View(past_medal_grp2)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
View(past_medal_grp2)
path <- getwd()
clear
clear()
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
View(past_medal_grp2)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[order(-total)]
full_results <- full_results[Total > 0, order(-total)]
full_results <- full_results[total > 0, order(-total)]
full_results <- full_results[total > 0, ][order(-total)]
full_results <- full_results[total > 0, ]
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[total > 0, ]
full_results
full_results <- full_results[total > 0, ][order(-total)]
full_results
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[total > 0, ][order(-total)]
write.csv(full_results, paste0(path, "/predictions.csv"))
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
View(past_medals_filtered)
unique(past_medals_filtered$`Country Code`)
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year)]
View(past_medal_grp)
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year,`Country Code`)]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year,`Country Code`)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year,`Country Code`)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Country Code", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# testing it out
subset <- past_medal_grp2[,c("Country", "Country Code", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
subset
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
predict(c(1,2,3,4,5))
subset
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Country Code", "Sport")])
# get projected results for all teams
full_results <- data.table(Team = unique(past_medals$Country))
for (team in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == team & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Team == team, sport] <- predict(arr)
}
}
full_results$Team <- subset[Team == full_results$Team, "Country Code"][1]
subset
# get projected results for all teams
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
}
}
full_results$Team <- subset[Country == full_results$Country, "Country Code"][1]
full_results$Team <- subset[Country == full_results$Country, "Country Code"]
full_results$Country <- subset[Country == full_results$Country, "Country Code"]
full_results
full_results[Country == "USA"]
full_results[Country == "USA", ]
merge(full_results, subset[, c("Country", "Country Code")], by=country)
merge(full_results, subset[, c("Country", "Country Code")], by=Country)
full_results$Country
subset$Country
subset[, c("Country", "Country Code")]
merge(full_results, subset[, c("Country", "Country Code")])
merge(full_results, subset[, c("Country", "Country Code")], by="Country")
merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = F)
merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T)
merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.y = F)
merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.y = T)
merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T)
unique(merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T))
# merge on country code
output <- unique(merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T))
View(output)
# get projected results for all teams
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[total > 0, ][order(-total)]
# merge on country code
output <- unique(merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T))
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year,`Country Code`)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Country Code", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Country Code", "Sport")])
# get projected results for all teams
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
}
}
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[total > 0, ][order(-total)]
# merge on country code
output <- unique(merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T))
write.csv(output, paste0(path, "/predictions.csv"))
write.csv(output, paste0(path, "/predictions.csv"))
# get projected results for all teams
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
}
}
# merge on country code
full_results <- unique(merge(full_results, subset[, c("Country", "Country Code")], by="Country", all.x = T))
# get total points and sort
full_results$total <- rowSums(full_results[,c(2:16)], na.rm = T)
full_results <- full_results[total > 0, ][order(-total)]
write.csv(full_results, paste0(path, "/predictions.csv"))
max(full_results)
max(full_results[, -c("Country", "Country Code", "total")])
max(full_results[, -c("Country", "Country Code", "total")], na.rm = T)
# get projected results for all teams
log <- c()
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
log <- c(log, predict(arr))
}
}
log <- c(log, predict(arr))
predict(arr)
library(readxl)
library(data.table)
path <- getwd()
# import data
past_medals <- data.table(read_excel(paste0(path, "/events.xlsx"), sheet = "Past Winners"))
past_medals <- past_medals[order(-Year,Sport)]
# add medal points amount
past_medals[Medal == "Gold", "Medal_Flag"]   <- (3 * 5) / past_medals[Medal == "Gold", "Divider"]
past_medals[Medal == "Silver", "Medal_Flag"] <- (2 * 5) / past_medals[Medal == "Silver", "Divider"]
past_medals[Medal == "Bronze", "Medal_Flag"] <- (1 * 5) / past_medals[Medal == "Bronze", "Divider"]
# filter out countries not present past 1984
drop_countries <- past_medals[, max(Year), by=list(Country)][V1 < 1998,]$Country
past_medals_filtered <- past_medals[!Country %in% drop_countries, ]
# transform data
past_medal_grp <- past_medals_filtered[, sum(Medal_Flag), by=list(Country,Sport,Year,`Country Code`)]
past_medal_grp$Year <- paste0("y", past_medal_grp$Year)
past_medal_grp2 <- dcast(past_medal_grp, Country + `Country Code` + Sport ~ Year, value.var = "V1", fill = 0)
# get linear regression using previous games
model <- lm(formula = y2014 ~ y2010 + y2006 + y2002 + y1998 + y1992, data=past_medal_grp2)
summary(model)
model2 <- lm(formula = y2010 ~ y2006 + y2002 + y1998 + y1992 + y1988, data=past_medal_grp2)
summary(model2)
model3 <- lm(formula = y2006 ~ y2002 + y1998 + y1992 + y1988 + y1984, data=past_medal_grp2)
summary(model3)
predict <- function(past_perf) {
coeffs <- rowMeans(cbind(model$coefficients, model2$coefficients, model3$coefficients))
sum(past_perf * coeffs[2:length(coeffs)]) + coeffs[1]
}
# testing it out
subset <- past_medal_grp2[,c("Country", "Country Code", "Sport", "y2014", "y2010", "y2006", "y2002", "y1998")]
predict(subset[Country == "USA" & Sport == "Ice Hockey", -c("Country", "Country Code", "Sport")])
# get projected results for all teams
log <- c()
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) full_results[Country == country, sport] <- predict(arr)
log <- c(log, predict(arr))
}
}
# get projected results for all teams
log <- c()
full_results <- data.table(Country = unique(past_medals$Country))
for (country in unique(past_medals$Country)) {
for (sport in unique(past_medals$Sport)) {
arr <- subset[Country == country & Sport == sport, -c("Country", "Country Code", "Sport")]
if (dim(arr)[1] == 1) {
full_results[Country == country, sport] <- predict(arr)
log <- c(log, predict(arr))
}
}
}
sort(log)
